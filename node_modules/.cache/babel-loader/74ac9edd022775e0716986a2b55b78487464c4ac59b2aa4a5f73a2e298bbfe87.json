{"ast":null,"code":"var _jsxFileName = \"/home/hiwot/Music/cms/src/components/input.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { TextField, InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  label,\n  value,\n  setValue,\n  type = \"text\",\n  showPasswordToggle = false\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = React.useState(false);\n  const handleTogglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    fullWidth: true,\n    label: label,\n    type: showPassword ? \"text\" : type,\n    value: value,\n    onChange: e => setValue(e.target.value),\n    InputProps: {\n      endAdornment: showPasswordToggle && /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleTogglePasswordVisibility,\n          edge: \"end\",\n          children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    },\n    InputLabelProps: {\n      shrink: true\n    } // Added to prevent label from moving when text is entered\n    ,\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","TextField","InputAdornment","IconButton","Visibility","VisibilityOff","jsxDEV","_jsxDEV","Input","label","value","setValue","type","showPasswordToggle","_s","showPassword","setShowPassword","useState","handleTogglePasswordVisibility","fullWidth","onChange","e","target","InputProps","endAdornment","position","children","onClick","edge","fileName","_jsxFileName","lineNumber","columnNumber","InputLabelProps","shrink","variant","margin","required","_c","$RefreshReg$"],"sources":["/home/hiwot/Music/cms/src/components/input.js"],"sourcesContent":["import React from 'react';\nimport { TextField, InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nconst Input = ({ label, value, setValue, type = \"text\", showPasswordToggle = false }) => {\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleTogglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <TextField\n      fullWidth\n      label={label}\n      type={showPassword ? \"text\" : type}\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      InputProps={{\n        endAdornment: showPasswordToggle && (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleTogglePasswordVisibility}\n              edge=\"end\"\n            >\n              {showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n      InputLabelProps={{ shrink: true }} // Added to prevent label from moving when text is entered\n      variant=\"outlined\"\n      margin=\"normal\"\n      required\n    />\n  );\n};\n\nexport default Input;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,cAAc,EAAEC,UAAU,QAAQ,eAAe;AACrE,SAASC,UAAU,EAAEC,aAAa,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,IAAI,GAAG,MAAM;EAAEC,kBAAkB,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACvF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMC,8BAA8B,GAAGA,CAAA,KAAM;IAC3CF,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,oBACER,OAAA,CAACN,SAAS;IACRkB,SAAS;IACTV,KAAK,EAAEA,KAAM;IACbG,IAAI,EAAEG,YAAY,GAAG,MAAM,GAAGH,IAAK;IACnCF,KAAK,EAAEA,KAAM;IACbU,QAAQ,EAAGC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACZ,KAAK,CAAE;IAC1Ca,UAAU,EAAE;MACVC,YAAY,EAAEX,kBAAkB,iBAC9BN,OAAA,CAACL,cAAc;QAACuB,QAAQ,EAAC,KAAK;QAAAC,QAAA,eAC5BnB,OAAA,CAACJ,UAAU;UACT,cAAW,4BAA4B;UACvCwB,OAAO,EAAET,8BAA+B;UACxCU,IAAI,EAAC,KAAK;UAAAF,QAAA,EAETX,YAAY,gBAAGR,OAAA,CAACF,aAAa;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGzB,OAAA,CAACH,UAAU;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAEpB,CAAE;IACFC,eAAe,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAE,CAAC;IAAA;IACnCC,OAAO,EAAC,UAAU;IAClBC,MAAM,EAAC,QAAQ;IACfC,QAAQ;EAAA;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEN,CAAC;AAAClB,EAAA,CAjCIN,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAmCX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}